{
  "uid" : "16687aae40151e76",
  "name" : "test_mis_audit_0_BBB88802",
  "fullName" : "scripts.test04_mis_audit.TestMisAudit#test_mis_audit_0_BBB88802",
  "historyId" : "488d14417b04fb2730a821f6364bae14",
  "time" : {
    "start" : 1600851646081,
    "stop" : 1600851686614,
    "duration" : 40533
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "a = (<scripts.test04_mis_audit.TestMisAudit testMethod=test_mis_audit_0_BBB88802>,)\n\n    @wraps(func)\n    def standalone_func(*a):\n>       return func(*(a + p.args), **p.kwargs)\n\ne:\\python38\\lib\\site-packages\\parameterized\\parameterized.py:530: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts\\test04_mis_audit.py:39: in test_mis_audit\n    self.au.page_mis_audit(title, channel)\npages\\page_mis_audit.py:60: in page_mis_audit\n    self.article_id = self.page_mis_get_article_id()\npages\\page_mis_audit.py:37: in page_mis_get_article_id\n    return self.base_get_text(pages.mis_id)\nbase\\base.py:31: in base_get_text\n    return self.base_get_element(loc).text\nbase\\base.py:15: in base_get_element\n    return WebDriverWait(self.driver, timeout=timeout, poll_frequency=poll) \\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a96362b0659525606f8d5b8b1f9c7208\")>\nmethod = <function Base.base_get_element.<locals>.<lambda> at 0x0000017B76077430>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\ne:\\python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1600851548969,
      "stop" : 1600851554359,
      "duration" : 5390
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "a = (<scripts.test04_mis_audit.TestMisAudit testMethod=test_mis_audit_0_BBB88802>,)\n\n    @wraps(func)\n    def standalone_func(*a):\n>       return func(*(a + p.args), **p.kwargs)\n\ne:\\python38\\lib\\site-packages\\parameterized\\parameterized.py:530: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts\\test04_mis_audit.py:39: in test_mis_audit\n    self.au.page_mis_audit(title, channel)\npages\\page_mis_audit.py:60: in page_mis_audit\n    self.article_id = self.page_mis_get_article_id()\npages\\page_mis_audit.py:37: in page_mis_get_article_id\n    return self.base_get_text(pages.mis_id)\nbase\\base.py:31: in base_get_text\n    return self.base_get_element(loc).text\nbase\\base.py:15: in base_get_element\n    return WebDriverWait(self.driver, timeout=timeout, poll_frequency=poll) \\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a96362b0659525606f8d5b8b1f9c7208\")>\nmethod = <function Base.base_get_element.<locals>.<lambda> at 0x0000017B76077430>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\ne:\\python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "292a72aa7a9ce696",
      "name" : "log",
      "source" : "292a72aa7a9ce696.txt",
      "type" : "text/plain",
      "size" : 8630
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1600851862558,
      "stop" : 1600851864760,
      "duration" : 2202
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "scripts"
  }, {
    "name" : "suite",
    "value" : "test04_mis_audit"
  }, {
    "name" : "subSuite",
    "value" : "TestMisAudit"
  }, {
    "name" : "host",
    "value" : "DESKTOP-DGCGN8L"
  }, {
    "name" : "thread",
    "value" : "11956-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "scripts.test04_mis_audit"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "7e7d1fec2d2afa36",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1600851600118,
        "stop" : 1600851641041,
        "duration" : 40923
      }
    }, {
      "uid" : "bf4b292102c0b30e",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1600851554359,
        "stop" : 1600851595035,
        "duration" : 40676
      }
    }, {
      "uid" : "63f26f447da00719",
      "status" : "passed",
      "time" : {
        "start" : 1600851266609,
        "stop" : 1600851288344,
        "duration" : 21735
      }
    }, {
      "uid" : "93f8e78960f96d4a",
      "status" : "passed",
      "time" : {
        "start" : 1600768298190,
        "stop" : 1600768319984,
        "duration" : 21794
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "16687aae40151e76.json",
  "parameterValues" : [ ]
}